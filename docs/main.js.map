{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/ability/ability.component.ts","./src/app/ability/ability.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/el-of-chain/el-of-chain.component.ts","./src/app/el-of-chain/el-of-chain.component.html","./src/app/evolution-chain/evolution-chain.component.ts","./src/app/evolution-chain/evolution-chain.component.html","./src/app/pokemon-modal/pokemon-modal.component.ts","./src/app/pokemon-modal/pokemon-modal.component.html","./src/app/pokemon/pokemon.component.ts","./src/app/pokemon/pokemon.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-ability',\n  templateUrl: './ability.component.html',\n  styleUrls: ['./ability.component.scss']\n})\nexport class AbilityComponent implements OnInit {\n  @Input() url: string;\n  isLoaded: boolean = false;\n  ability: any;\n  constructor() { }\n  getAbility(){\n    fetch(this.url).then(res => res.json()).then(r =>{\n      this.ability = r.effect_entries.filter(item => item.language.name == 'en')\n      \n      this.isLoaded = true\n    })\n  }\n  ngOnInit(): void {\n    this.getAbility()\n  }\n\n}\n","<p *ngIf = 'isLoaded; else unset'>{{ability[0].effect}}</p>\n<ng-template #unset>  \n    <mat-spinner [diametr] = '10'></mat-spinner>  \n</ng-template> ","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NumberSymbol } from '@angular/common';\nimport {PokemonComponent} from './pokemon/pokemon.component'\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n  \n})\n\nexport class AppComponent {\n  result: Object[];\n  totalPages: number\n  searchValue: string = '';\n  title = 'Pokemons';\n  allPokemons: any;\n  filteredPokemons: any;\n  pokemonsOfType: any;\n  pageIndex: number = 0;\n  pageSize: number = 10;\n  type: string = 'none'\n  types: any = [];\n  getAllPokemons(){\n    fetch(`https://pokeapi.co/api/v2/pokemon?limit=999&offset=0`).then(res => res.json()).then(r =>{\n      this.allPokemons = r.results\n      this.pokemonsOfType = r.results\n      this.totalPages = r.count\n      this.handleSearch()\n      this.itemsInPage(0, 10)\n    })\n  }\n  getTypes(){\n    fetch(`https://pokeapi.co/api/v2/type`).then(res => res.json()).then(r =>{\n        this.types = r.results\n      })\n  }\n  typeOnChange(){\n    \n    if(this.type == 'none'){\n      this.pokemonsOfType = this.allPokemons\n      this.handleSearch()\n    }\n    else{\n      fetch(`https://pokeapi.co/api/v2/type/${this.type}`).then(res => res.json()).then(r =>{\n        this.pokemonsOfType = r.pokemon.map(item => item.pokemon)\n        this.handleSearch()\n      })\n    }  \n  }\n  itemsInPage(page, limit){\n    this.result = this.filteredPokemons.slice(page * limit, (page + 1) * limit)\n  }\n  \n  page(obj: any){\n    this.pageIndex = obj.pageIndex\n    this.pageSize = obj.pageSize\n    this.itemsInPage(obj.pageIndex, obj.pageSize)\n    \n  }\n  ngOnInit(){\n    this.getTypes()\n    this.getAllPokemons()\n  }\n  handleSearch(){\n    \n      this.filteredPokemons = this.pokemonsOfType.filter(item =>item.name.indexOf(this.searchValue) === -1 ? false : true)\n      this.totalPages = this.filteredPokemons.length\n      this.pageIndex = 0\n      this.pageSize = 10\n      this.itemsInPage(this.pageIndex, this.pageSize)\n    }\n      \n}\n","<mat-toolbar>\n  <span>{{title}}</span>\n  <input (input) = \"handleSearch()\" matInput placeholder=\"Search...\" [(ngModel)] = \"searchValue\" >\n</mat-toolbar>\n<mat-paginator \n    [pageIndex] = 'pageIndex' \n    length = {{totalPages}} \n    (page)=\"page($event)\" \n    [pageSizeOptions] = \"[10, 20, 50, 100]\" \n    [pageSize] = 'pageSize'\n>\n</mat-paginator>\n<div class='center'>\n  <mat-form-field  appearance=\"fill\">\n    <mat-label>Filter by type</mat-label>\n    <mat-select (selectionChange) = 'typeOnChange()' [(value)]=\"type\">\n      <mat-option value = 'none'>None</mat-option>\n      <mat-option *ngFor = 'let type of types' [value]=\"type.name\">{{type.name}}</mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n\n\n<div class=\"container\">\n  \n  <app-pokemon *ngFor = 'let pokemon of result' [info] = \"pokemon\"> </app-pokemon>\n  \n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport { PokemonComponent } from './pokemon/pokemon.component';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { PokemonModalComponent } from './pokemon-modal/pokemon-modal.component';\nimport {MatTableModule} from '@angular/material/table';\nimport { AbilityComponent } from './ability/ability.component';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { EvolutionChainComponent } from './evolution-chain/evolution-chain.component';\nimport { ElOfChainComponent } from './el-of-chain/el-of-chain.component';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PokemonComponent,\n    PokemonModalComponent,\n    AbilityComponent,\n    EvolutionChainComponent,\n    ElOfChainComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatGridListModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatTableModule,\n    MatTabsModule,\n    FormsModule,\n    MatInputModule,\n    MatSelectModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-el-of-chain',\n  templateUrl: './el-of-chain.component.html',\n  styleUrls: ['./el-of-chain.component.scss']\n})\nexport class ElOfChainComponent implements OnInit {\n  @Input() name: string;\n  imageSrc: string;\n  isLoaded: boolean = false;\n  constructor() { }\n  getImage(){\n\n    fetch(\"https://pokeapi.co/api/v2/pokemon/\"+this.name).then(res => res.json()).then(r =>{\n      this.imageSrc = r.sprites.front_default\n      this.isLoaded = true\n    })\n  }\n  ngOnInit(): void {\n    this.getImage()\n  }\n\n}\n","<img *ngIf = 'isLoaded; else unset' [src] = 'imageSrc'>\n<ng-template #unset>  \n    <mat-spinner [diametr] = '10'></mat-spinner>  \n</ng-template> ","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-evolution-chain',\n  templateUrl: './evolution-chain.component.html',\n  styleUrls: ['./evolution-chain.component.scss']\n})\nexport class EvolutionChainComponent implements OnInit {\n  @Input() speciesUrl: string;\n  evoChain: string[] = [];\n  isLoaded: boolean = false;\n  getSpecies(){\n    fetch(this.speciesUrl).then(res => res.json()).then(r =>{\n      this.getEvoChain(r.evolution_chain.url)\n    })\n  }\n  getEvoChain(url){\n    fetch(url).then(res => res.json()).then(r =>{\n      let el = r.chain\n      do{\n        this.evoChain.push(el.species.name)\n        el = el.evolves_to[0]\n    }while(el !== undefined)\n    this.isLoaded = true\n    })\n  }\n  constructor() { }\n\n  ngOnInit(): void {\n    this.getSpecies()\n  }\n\n}\n","<div *ngIf = 'isLoaded; else unset'>\n    <app-el-of-chain  *ngFor = 'let item of evoChain' [name] = \"item\"></app-el-of-chain>\n</div>\n<ng-template #unset>\n    <mat-spinner [diametr] = '10'></mat-spinner>  \n</ng-template>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-pokemon-modal',\n  templateUrl: './pokemon-modal.component.html',\n  styleUrls: ['./pokemon-modal.component.scss', '../colors.scss']\n})\nexport class PokemonModalComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) {}\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 mat-dialog-title>{{data.name[0].toUpperCase()+data.name.substr(1)}} </h1>\n<div mat-dialog-content>\n    <hr>\n    <img [src] = \"data.sprites.front_default\">\n    <table >\n        <tr >\n            <td>Height</td>\n            <td>{{data.height}}</td>\n        </tr>\n        <tr>\n            <td>Weight</td>\n            <td>{{data.weight}}</td>\n        </tr>\n        <tr>\n            <td>Base Experience</td>\n            <td>{{data.base_experience}}</td>\n        </tr>\n        <tr>\n            <td>Types</td>\n            <td><span *ngFor = 'let type of data.types' [class]='type.type.name'>{{type.type.name}} </span></td>\n        </tr>\n    </table>\n    <hr>\n    <div>\n        <h2>Stats</h2>\n        <table class='stats'>\n            <tr *ngFor=\"let stat of data.stats\">\n                <td>{{stat.stat.name.toUpperCase()}}</td>\n                <td>{{stat.base_stat}}</td>\n            </tr>\n        </table>\n    </div>\n    <hr>\n    <h2>Abilities</h2>\n    <mat-tab-group>\n        <mat-tab *ngFor = \"let ability of data.abilities\" [label]=\"ability.ability.name\"><app-ability [url] = \"ability.ability.url\"></app-ability>  </mat-tab>\n      </mat-tab-group>\n      <hr>\n      <h2>Evolution Chain</h2>\n      <app-evolution-chain [speciesUrl] = \"data.species.url\"></app-evolution-chain>\n      <hr>\n    \n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport {PokemonModalComponent} from '../pokemon-modal/pokemon-modal.component'\nimport {MatDialog} from '@angular/material/dialog'\n\n\n@Component({\n  selector: 'app-pokemon',\n  templateUrl: './pokemon.component.html',\n  styleUrls: ['./pokemon.component.scss', '../colors.scss'],\n  \n})\nexport class PokemonComponent implements OnInit {\n  @Input() info: any;\n  pokemon: any\n  isLoaded: boolean = false;\n  isImg: boolean = false;\n  constructor(public dialog: MatDialog) {}\n  getPokemonInfo(){\n    \n    fetch(this.info.url).then(res => res.json()).then(r =>{\n      this.pokemon = r\n      this.isLoaded = true\n      if(r.sprites.front_default != null)\n        this.isImg = true\n    })\n  }\n  ngOnInit(): void {\n    this.getPokemonInfo()\n  }\n\n  handleDetails(){\n    let dialogRef = this.dialog.open(PokemonModalComponent, {\n      height: '520px',\n      width: '600px',\n      data: this.pokemon\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n}\n","<mat-card *ngIf = 'isLoaded; else unset'>\n    <mat-card-title>{{info.name[0].toUpperCase()+info.name.substr(1)}} </mat-card-title>\n    <div><span *ngFor = 'let type of pokemon.types' [class]='type.type.name'>{{type.type.name}} </span></div>\n    <mat-card-content>\n        <img *ngIf = 'isImg; else placeholderImg' [src] = \"pokemon.sprites.front_default\"  mat-card-image>\n    </mat-card-content>\n    <button mat-raised-button (click) = \"handleDetails()\" color='primary'>Details</button>\n</mat-card>\n<ng-template #unset>  \n    <mat-spinner [diametr] = '10'></mat-spinner>  \n</ng-template> \n<ng-template #placeholderImg>  \n    <img src='../../assets/images.png' mat-card-image>\n</ng-template> ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}